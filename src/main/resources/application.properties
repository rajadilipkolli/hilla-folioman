spring.application.name=hilla-folioman
server.port=${PORT:8080}
logging.level.org.atmosphere = warn

spring.mustache.check-template-location=false
spring.mvc.problemdetails.enabled=true
spring.threads.virtual.enabled=true

# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true
# To improve the performance during development.
# For more information https://vaadin.com/docs/latest/integrations/spring/configuration#special-configuration-parameters
vaadin.allowed-packages = com.vaadin,org.vaadin,com.example.application

spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,"**/*Test.class,**/*Tests.class,git.properties,META-INF/build-info.properties,**/MFSchemeDTO.class
spring.devtools.add-properties=false

spring.modulith.events.republish-outstanding-events-on-restart=true
spring.testcontainers.beans.startup=parallel

spring.data.redis.repositories.enabled=false
################ Database #####################
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
#spring.data.jpa.repositories.bootstrap-mode=deferred
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.pool-name=HikariPool-${spring.application.name}
spring.datasource.hikari.data-source-properties.ApplicationName=${spring.application.name}
# Added connection leak detection
spring.datasource.hikari.leak-detection-threshold=300000
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.batch_size=200
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=4096
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Observability
management.endpoints.web.exposure.include=*
management.metrics.tags.service.name=${spring.application.name}
management.tracing.sampling.probability=1.0
management.otlp.tracing.endpoint=http://localhost:4318/v1/traces


########################## JobRunr ########################
# the job-scheduler is enabled by default
# the background-job-server and dashboard are disabled by default, hence enabling
org.jobrunr.background-job-server.enabled=true
#org.jobrunr.background-job-server.worker-count=4
org.jobrunr.dashboard.enabled=true
org.jobrunr.dashboard.port=8005
org.jobrunr.miscellaneous.allow-anonymous-data-usage=false
org.jobrunr.jobs.metrics.enabled=true
org.jobrunr.database.type=mongodb

################# MongoDB #############################
spring.data.mongodb.database=${MONGODB_DATABASE:jobrunr}
spring.data.mongodb.uri=${MONGODB_URI:mongodb://localhost:27017/${spring.data.mongodb.database}}
################# Datasource micrometer ###############
jdbc.datasource-proxy.query.enable-logging=true

# logging configuration
jdbc.datasource-proxy.logging=slf4j
jdbc.datasource-proxy.query.log-level=DEBUG
jdbc.datasource-proxy.query.logger-name=datasource-query-logger
jdbc.datasource-proxy.multiline=false
jdbc.datasource-proxy.include-parameter-values=true
jdbc.datasource-proxy.slow-query.enable-logging=true
jdbc.datasource-proxy.slow-query.logger-name=ds-slow-query-logger
jdbc.datasource-proxy.type=concrete
jdbc.includes=connection,fetch,query
jdbc.excludedDataSourceBeanNames=jobrunrDataSource


# gzip config
server.compression.enabled=true
server.compression.mime-types=text/html,text/css,application/javascript,application/json
server.compression.min-response-size=1024

app.amfi.scheme.data-url=https://portal.amfiindia.com/DownloadSchemeData_Po.aspx?mf=0
app.bsestar.scheme.data-url=https://bsestarmf.in/RptSchemeMaster.aspx
app.nav.amfi.data-url=https://www.amfiindia.com/spages/NAVAll.txt
app.nav.mfapi.data-url=https://api.mfapi.in/mf/{schemeCode}

# HttpClient
spring.http.client.factory=jdk
spring.http.client.read-timeout=PT1M
spring.http.client.connect-timeout=PT30S

# FlexyPool DB connections
app.datasource.acquisitionStrategy.retries=2
app.datasource.acquisitionStrategy.incrementTimeout=60
app.datasource.acquisitionStrategy.acquisitionTimeout=100
app.datasource.acquisitionStrategy.leaseTimeThreshold=250
app.datasource.max-overgrow-poolSize=5
# Database connection leak detection
app.datasource.connectionLeak.enabled=true
app.datasource.connectionLeak.thresholdMs=300000
# Database metrics collection
app.datasource.metrics.detailed=true
app.datasource.metrics.reportingIntervalMs=60000

# Redis cache configuration
app.cache.compression.enabled=true
app.cache.default-ttl=1800
# Redis circuit breaker configuration
app.cache.circuit-breaker.failure-rate-threshold=50
app.cache.circuit-breaker.wait-duration-seconds=30
app.cache.circuit-breaker.sliding-window-size=100
# Redis adaptive strategy
app.cache.adaptive-strategy.interval-ms=600000
app.cache.adaptive-strategy.stability-threshold=3
